{"version":3,"sources":["App.styles.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["Container","styled","div","FeedbackContainer","Wrapper","Title","h2","Section","children","title","BtnContainer","Button","button","FeedbackOptions","options","onLeaveFeedback","optionsKeys","Object","keys","map","key","onClick","List","ul","Item","li","Text","p","Statistics","total","positivePercentage","state","stateKeys","Message","Notification","message","App","good","neutral","bad","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","evnt","feedback","target","dataset","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEaA,EAAYC,IAAOC,IAAV,6GAMTC,EAAoBF,IAAOC,IAAV,wICNjBE,EAAUH,IAAOC,IAAV,yNAaPG,EAAQJ,IAAOK,GAAV,0N,OCJHC,EATC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAC1B,OACE,eAACL,EAAD,WACE,cAACC,EAAD,UAAQI,IACPD,MCJME,EAAeT,IAAOC,IAAV,yIAQZS,EAASV,IAAOW,OAAV,0RCSJC,EAjBS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAC3BC,EAAcC,OAAOC,KAAKJ,GAChC,OACE,cAACJ,EAAD,UACGM,EAAYG,KAAI,SAAAC,GAAG,OAClB,cAACT,EAAD,CAEEU,QAASN,EACT,gBAAeK,EAHjB,SAKGA,GAJIA,S,QCNFE,EAAOrB,IAAOsB,GAAV,wHAOJC,EAAOvB,IAAOwB,GAAV,6IAUJC,EAAOzB,IAAO0B,EAAV,0B,iCCMFC,EAvBI,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,mBAAuBC,EAAY,iBACvDC,EAAYf,OAAOC,KAAKa,GAE9B,OACE,eAACT,EAAD,WACGU,EAAUb,KAAI,SAAAC,GACb,OACE,cAACI,EAAD,UACE,eAACE,EAAD,WAAON,EAAP,KAAcW,EAAMX,OADXA,EAAMW,EAAMX,OAM3B,cAACI,EAAD,UACE,eAACE,EAAD,qBAAcG,OAEhB,cAACL,EAAD,UACE,eAACE,EAAD,iCAA0BI,EAA1B,aCjBKG,EAAUhC,IAAO0B,EAAV,0BCELO,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,cAACF,EAAD,UAAUE,KCiDjCC,E,4MA3CbL,MAAQ,CACNM,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,mBAAqB,kBACnBvB,OAAOwB,OAAO,EAAKV,OAAOW,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,M,EAEzDC,gCAAkC,kBAChCC,KAAKC,MAAwB,IAAlB,EAAKhB,MAAMM,KAAa,EAAKG,uB,EAE1CzB,gBAAkB,SAACiC,GACjB,IAAMC,EAAWD,EAAKE,OAAOC,QAAQF,SAErC,EAAKG,UAAS,SAAAC,GAAS,sBAAQJ,EAAWI,EAAUJ,GAAY,O,4CAGlE,WACE,IAAMpB,EAAQyB,KAAKd,qBAEnB,OACE,cAACxC,EAAD,UACE,eAACG,EAAD,WACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBK,QAASwC,KAAKvB,MAAOhB,gBAAiBuC,KAAKvC,oBAE9D,cAAC,EAAD,CAASN,MAAM,aAAf,SACCoB,EACC,cAAC,EAAD,CACEQ,KAAMiB,KAAKvB,MAAMM,KACjBC,QAASgB,KAAKvB,MAAMO,QACpBC,IAAKe,KAAKvB,MAAMQ,IAChBV,MAAOyB,KAAKd,qBACZV,mBAAoBwB,KAAKT,oCACtB,cAAC,EAAD,CAAcV,QAAQ,iC,GApCrBoB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.184f4ad5.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n  padding: 20px;\r\n\r\n  background-color: var(--main-bg-color);\r\n`\r\nexport const FeedbackContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(2 1fr);\r\n  gap: 25px;\r\n\r\n  width: 700px;\r\n  margin: 0 auto;\r\n`","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  text-align: center;\r\n\r\n  padding-bottom: 10px;\r\n\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n\r\n  background-color: var(--white-color);\r\n\r\n  box-shadow: 0 0.5rem 1rem rgb(0 0 0 / 15%);\r\n`\r\n\r\nexport const Title = styled.h2`\r\n  margin-bottom: 10px;\r\n  padding: 15px;\r\n\r\n  text-transform: uppercase;\r\n\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n\r\n  color: #343a40;\r\n\r\n  box-shadow: 0 0.125rem 0.25rem rgb(0 0 0 / 8%)\r\n`","import { Wrapper, Title } from \"./Section.styles\";\r\n\r\nconst Section = ({children, title}) => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Section;","import styled from \"@emotion/styled\";\r\n\r\nexport const BtnContainer = styled.div`\r\nwidth: 100%;\r\njustify-content: center;\r\ndisplay: grid;\r\ngrid-template-columns: repeat(3, 80px);\r\ngap: 10px;\r\n`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder: 1px solid #ccc;\r\nborder-radius: 15px;\r\n\r\nbackground-color: var(--white-color);\r\ntext-transform: capitalize;\r\n\r\nbox-shadow: 0 3px 8px rgb(0 0 0 / 15%);\r\n\r\n&:hover {\r\n  background-color: rgba(204, 204, 204, 0.8);\r\n  color: #fff;\r\n}\r\n`","import { Button, BtnContainer } from \"./FeedbackOptions.styles\";\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\r\n  const optionsKeys = Object.keys(options)\r\n  return (\r\n    <BtnContainer>\r\n      {optionsKeys.map(key =>\r\n        <Button\r\n          key={key}\r\n          onClick={onLeaveFeedback}\r\n          data-feedback={key}\r\n        >\r\n          {key}\r\n        </Button>\r\n      )}\r\n    </BtnContainer>\r\n  )\r\n}\r\n\r\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\ndisplay: grid;\r\ngrid-template-columns: repeat(5, 1fr);\r\nmargin: 0 auto;\r\nlist-style: none;\r\n`\r\n\r\nexport const Item = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n\r\n&:not(:last-child) {\r\n  margin-right: 5px;\r\n}\r\n`\r\n\r\nexport const Text = styled.p``\r\n","import { List, Item, Text } from \"./Statistics.styles\";\r\n\r\nconst Statistics = ({total, positivePercentage, ...state }) => {\r\n  const stateKeys = Object.keys(state);\r\n\r\n  return (\r\n    <List>\r\n      {stateKeys.map(key => {\r\n        return (\r\n          <Item key={key + state[key]}>\r\n            <Text>{key}: {state[key]}</Text>\r\n          </Item>\r\n        );\r\n      })}\r\n\r\n      <Item>\r\n        <Text>Total: {total}</Text>\r\n      </Item>\r\n      <Item>\r\n        <Text>Positive feedback: {positivePercentage}%</Text>\r\n      </Item>\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default Statistics;\r\n\r\n\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Message = styled.p``","import { Message } from './Notification.styles';\r\n\r\nconst Notification = ({ message }) => <Message>{message}</Message>\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport { Container, FeedbackContainer } from './App.styles';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component{\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value);\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round(this.state.good * 100 / this.countTotalFeedback());\n\n  onLeaveFeedback = (evnt) => {\n    const feedback = evnt.target.dataset.feedback;\n\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }))\n  }\n\n  render() {\n    const total = this.countTotalFeedback();\n    \n    return (\n      <Container>\n        <FeedbackContainer>\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions options={this.state} onLeaveFeedback={this.onLeaveFeedback}/>\n          </Section>\n          <Section title=\"Statistics\">\n          {total ?\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            /> : <Notification message=\"No feedback given\" />}\n          </Section>\n        </FeedbackContainer>\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}